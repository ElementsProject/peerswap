name: CI (for new tags)


on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+-*

env:
  SLOW_MACHINE: 1

jobs:
  buildandtest:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Cache install Nix packages
        uses: rikhuijzer/cache-install@v1.0.8        
        with:
          key: nix-${{ hashFiles('packages.nix') }}
          nix_file: 'ci.nix'
      
      - name: Build peerswap
        run: make build

      - name: Run go tests
        run: make test

  integration:
    runs-on: ubuntu-latest
    needs: [buildandtest]
    strategy:
      max-parallel: 4
      matrix:
        test-vector: [bitcoin-lnd, liquid-lnd]
    steps:
      - uses: actions/checkout@v2
      
      - name: Cache install Nix packages
        uses: rikhuijzer/cache-install@v1.0.8        
        with:
          key: nix-${{ hashFiles('packages.nix') }}
          nix_file: 'ci.nix'

      - name: Run tests with integration
        run: make test-${{matrix.test-vector}}
  
  docker:
    name: Build and push Docker container
    runs-on: ubuntu-latest
    # Only push Docker container if all tests pass
    needs: [integration]
    
    steps:
      - uses: actions/checkout@v2
     
      - name: Set env variables
        run: |
          echo "TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
          REPO_OWNER=${{ github.repository_owner }}
          echo "IMAGE_NAME=${REPO_OWNER,,}/${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker buildx action
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker container
        if: ${{ github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name }}
        run: |
                docker buildx build \
                --platform linux/amd64,linux/arm64 \
                --tag ghcr.io/$IMAGE_NAME:$TAG \
                --output "type=registry" ./
